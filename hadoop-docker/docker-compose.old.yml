version: '3'
services:
  spark-master:
    restart: always
    image: docker.mirrors.sjtug.sjtu.edu.cn/bde2020/spark-master:3.0.1-hadoop3.2
    container_name: spark-master
    environment:
      - INIT_DAEMON_STEP=setup_spark

  spark-worker-0:
    restart: always
    build: ./spark-worker
    environment:
      - "SPARK_MASTER=spark://node-master.lan:7077"
      - "SPARK_HOST=node-0.lan"

  spark-worker-1:
    restart: always
    build: ./spark-worker
    environment:
      - "SPARK_MASTER=spark://node-master.lan:7077"
      - "SPARK_HOST=node-1.lan"

  spark-worker-2:
    restart: always
    build: ./spark-worker
    environment:
      - "SPARK_MASTER=spark://node-master.lan:7077"
      - "SPARK_HOST=node-2.lan"

  hadoop-namenode:
    image: docker.mirrors.sjtug.sjtu.edu.cn/bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    volumes:
      - ./hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=alexchi-cluster
    env_file:
      - ./hadoop.env
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: always
      placement:
        constraints:
          - node.hostname == node-master.lan

  hadoop-historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    restart: always
    ports:
      - 8188:8188
      - 10200:10200
    environment:
      SERVICE_PRECONDITION: "node-master.lan:9000 node-master.lan:9870 node-0.lan:9864 node-1.lan:9864 node-2.lan:9864 node-master.lan:8088"
    volumes:
      - ./hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop.env

  hadoop-resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "node-master.lan:9000 node-master.lan:9870 node-0.lan:9864"
    env_file:
      - ./hadoop.env

  hadoop-nodemanager:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    restart: always
    environment:
      SERVICE_PRECONDITION: "node-master.lan:9000 node-master.lan:9870 node-0.lan:9864 node-master.lan:8088"
    env_file:
      - ./hadoop.env

  hadoop-datanode-0:
    image: docker.mirrors.sjtug.sjtu.edu.cn/bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    ports:
      - 9866:9866
      - 9864:9864
    volumes:
      - ./hadoop_datanode:/hadoop/dfs/data
    hostname: 'node-0.lan'
    environment:
      SERVICE_PRECONDITION: "node-master.lan:9870"
    env_file:
      - ./hadoop.env

  hadoop-datanode-1:
    image: docker.mirrors.sjtug.sjtu.edu.cn/bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    ports:
      - 9866:9866
      - 9864:9864
    volumes:
      - ./hadoop_datanode:/hadoop/dfs/data
    hostname: 'node-1.lan'
    environment:
      SERVICE_PRECONDITION: "node-master.lan:9870"
    env_file:
      - ./hadoop.env

  hadoop-datanode-2:
    image: docker.mirrors.sjtug.sjtu.edu.cn/bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    ports:
      - 9866:9866
      - 9864:9864
    volumes:
      - ./hadoop_datanode:/hadoop/dfs/data
    hostname: 'node-2.lan'
    environment:
      SERVICE_PRECONDITION: "node-master.lan:9870"
    env_file:
      - ./hadoop.env
